name: Main foodgram workflow

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: nikitarachkov1/foodgram_backend:latest

      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: nikitarachkov1/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo (for repo metadata)
        uses: actions/checkout@v3

      - name: Prepare remote and fetch files from GitHub
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            REPO="${{ github.repository }}"
            SHA="${{ github.sha }}"
            BASE="/home/yc-user/foodgram"
            mkdir -p "$BASE/infra"
            curl -fsSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://raw.githubusercontent.com/$REPO/$SHA/docker-compose.yml" \
              -o "$BASE/docker-compose.yml"
            curl -fsSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://raw.githubusercontent.com/$REPO/$SHA/infra/nginx.conf" \
              -o "$BASE/infra/nginx.conf"
            ls -l "$BASE" "$BASE/infra"

      - name: Deploy stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd /home/yc-user/foodgram
            cat > .env <<'EOF'
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            DB_HOST=db
            DB_PORT=5432
            EOF
            sudo docker compose -f docker-compose.yml down --remove-orphans || true

            sudo docker image prune -af
            sudo docker builder prune -af || true
            sudo find /var/lib/docker/containers -name "*-json.log" -type f -exec truncate -s 0 {} \;

            sudo docker compose -f docker-compose.yml pull
            sudo docker compose -f docker-compose.yml up -d
            sleep 15
            sudo docker compose -f docker-compose.yml exec backend python manage.py migrate --noinput
            sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic --noinput      
