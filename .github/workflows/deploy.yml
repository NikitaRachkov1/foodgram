name: Main foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: nikitarachkov1/foodgram_backend:latest

      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: nikitarachkov1/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ensure remote dir exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            mkdir -p /home/yc-user/foodgram/infra
            chown -R yc-user:yc-user /home/yc-user/foodgram || true
            ls -ld /home/yc-user/foodgram /home/yc-user/foodgram/infra

      - name: Copy compose and nginx.conf via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: |
            docker-compose.yml
            infra/nginx.conf
          target: "/home/yc-user/foodgram"
          overwrite: true
          debug: true

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd /home/yc-user/foodgram
            cat > .env <<EOF
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            DB_HOST=db
            DB_PORT=5432
            EOF
            sudo docker compose -f docker-compose.yml pull
            sudo docker compose -f docker-compose.yml down --remove-orphans
            sudo docker compose -f docker-compose.yml up -d
            sleep 15
            sudo docker compose -f docker-compose.yml exec backend python manage.py migrate --noinput
            sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic --noinput
